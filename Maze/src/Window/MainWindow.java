package Window;

import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Window;
import java.lang.reflect.Method;
import javax.swing.JFrame;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Nels
 */
public class MainWindow extends JFrame {

    private int width = 522;
    private int height = 505;
    static MainWindow mazeFrame = new MainWindow();
    MenuPanel menu = new MenuPanel();
    GamePanel game = new GamePanel();
    private static GraphicsDevice vc;
    private boolean fullscreen = false;

    public MainWindow() {
        initComponents();
        if (System.getProperty("os.name").equals("Mac OS X")) {
            enableOSXFullscreen(this);
        }
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setSize(width, height);
        this.setContentPane(menu);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method sets the current {@link javax.swing.JFrame} to full screen
     * mode It determines whether full screen is supported according to
     * {@link http://docs.oracle.com/javase/tutorial/extra/fullscreen/}
     */
    public void toggleFullscreen() {
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        vc = ge.getDefaultScreenDevice();
        if (vc.isFullScreenSupported()) {
            if (!fullscreen) {
                vc.setFullScreenWindow(mazeFrame);
                fullscreen = true;
                setVisible(false);
                setVisible(true);
            } else if (fullscreen) {
                vc.setFullScreenWindow(null);
                fullscreen = false;
            }
        } else {
            if (!fullscreen) {
                mazeFrame.setExtendedState(MainWindow.MAXIMIZED_BOTH);
                mazeFrame.setUndecorated(false);
                mazeFrame.setResizable(false);
            } else {
                mazeFrame.setExtendedState(MainWindow.NORMAL);
                mazeFrame.setUndecorated(true);
                mazeFrame.setResizable(true);
            }
        }
    }

    /**
     * This method turns on the native full screen support that is shipped with
     * OS X 10.7 or later
     *
     * @param window This parameter indicates which window has to be set to OS X
     * full screen mode.
     */
    @SuppressWarnings({"unchecked", "rawtypes"})
    public static void enableOSXFullscreen(Window window) {
        try {
            Class util = Class.forName("com.apple.eawt.FullScreenUtilities");
            Class params[] = new Class[]{Window.class, Boolean.TYPE};
            Method method = util.getMethod("setWindowCanFullScreen", params);
            method.invoke(util, window, true);
        } catch (ClassNotFoundException e1) {
        } catch (Exception e) {
            System.out.println("Failed to enable Mac Fullscreen: " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Maze");
        getContentPane().setLayout(new java.awt.CardLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
